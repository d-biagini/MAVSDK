// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see https://github.com/mavlink/MAVSDK-Proto/blob/master/protos/swarm_server/swarm_server.proto)

#include <iomanip>

#include "swarm_server_impl.h"
#include "plugins/swarm_server/swarm_server.h"

namespace mavsdk {

using PositionGlobalYaw = SwarmServer::PositionGlobalYaw;

SwarmServer::SwarmServer(std::shared_ptr<ServerComponent> server_component) :
    ServerPluginBase(),
    _impl{std::make_unique<SwarmServerImpl>(server_component)}
{}

SwarmServer::~SwarmServer() {}

void SwarmServer::subscribe_position_target_global_setpoint(
    PositionTargetGlobalSetpointCallback callback)
{
    _impl->subscribe_position_target_global_setpoint(callback);
}

std::ostream&
operator<<(std::ostream& str, SwarmServer::PositionGlobalYaw::AltitudeType const& altitude_type)
{
    switch (altitude_type) {
        case SwarmServer::PositionGlobalYaw::AltitudeType::RelHome:
            return str << "Rel Home";
        case SwarmServer::PositionGlobalYaw::AltitudeType::Amsl:
            return str << "Amsl";
        case SwarmServer::PositionGlobalYaw::AltitudeType::Agl:
            return str << "Agl";
        default:
            return str << "Unknown";
    }
}
bool operator==(
    const SwarmServer::PositionGlobalYaw& lhs, const SwarmServer::PositionGlobalYaw& rhs)
{
    return ((std::isnan(rhs.lat_deg) && std::isnan(lhs.lat_deg)) || rhs.lat_deg == lhs.lat_deg) &&
           ((std::isnan(rhs.lon_deg) && std::isnan(lhs.lon_deg)) || rhs.lon_deg == lhs.lon_deg) &&
           ((std::isnan(rhs.alt_m) && std::isnan(lhs.alt_m)) || rhs.alt_m == lhs.alt_m) &&
           ((std::isnan(rhs.yaw_deg) && std::isnan(lhs.yaw_deg)) || rhs.yaw_deg == lhs.yaw_deg) &&
           (rhs.altitude_type == lhs.altitude_type);
}

std::ostream&
operator<<(std::ostream& str, SwarmServer::PositionGlobalYaw const& position_global_yaw)
{
    str << std::setprecision(15);
    str << "position_global_yaw:" << '\n' << "{\n";
    str << "    lat_deg: " << position_global_yaw.lat_deg << '\n';
    str << "    lon_deg: " << position_global_yaw.lon_deg << '\n';
    str << "    alt_m: " << position_global_yaw.alt_m << '\n';
    str << "    yaw_deg: " << position_global_yaw.yaw_deg << '\n';
    str << "    altitude_type: " << position_global_yaw.altitude_type << '\n';
    str << '}';
    return str;
}

} // namespace mavsdk