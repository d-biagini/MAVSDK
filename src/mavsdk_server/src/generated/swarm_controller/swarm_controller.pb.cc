// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: swarm_controller/swarm_controller.proto

#include "swarm_controller/swarm_controller.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mavsdk {
namespace rpc {
namespace swarm_controller {
PROTOBUF_CONSTEXPR StartRequest::StartRequest(
    ::_pbi::ConstantInitialized){}
struct StartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartRequestDefaultTypeInternal() {}
  union {
    StartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartRequestDefaultTypeInternal _StartRequest_default_instance_;
PROTOBUF_CONSTEXPR StartResponse::StartResponse(
    ::_pbi::ConstantInitialized)
  : offboard_result_(false){}
struct StartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartResponseDefaultTypeInternal() {}
  union {
    StartResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartResponseDefaultTypeInternal _StartResponse_default_instance_;
PROTOBUF_CONSTEXPR StopRequest::StopRequest(
    ::_pbi::ConstantInitialized){}
struct StopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopRequestDefaultTypeInternal() {}
  union {
    StopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopRequestDefaultTypeInternal _StopRequest_default_instance_;
PROTOBUF_CONSTEXPR StopResponse::StopResponse(
    ::_pbi::ConstantInitialized)
  : offboard_result_(false){}
struct StopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopResponseDefaultTypeInternal() {}
  union {
    StopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopResponseDefaultTypeInternal _StopResponse_default_instance_;
PROTOBUF_CONSTEXPR IsActiveRequest::IsActiveRequest(
    ::_pbi::ConstantInitialized){}
struct IsActiveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsActiveRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsActiveRequestDefaultTypeInternal() {}
  union {
    IsActiveRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsActiveRequestDefaultTypeInternal _IsActiveRequest_default_instance_;
PROTOBUF_CONSTEXPR IsActiveResponse::IsActiveResponse(
    ::_pbi::ConstantInitialized)
  : is_active_(false){}
struct IsActiveResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsActiveResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsActiveResponseDefaultTypeInternal() {}
  union {
    IsActiveResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsActiveResponseDefaultTypeInternal _IsActiveResponse_default_instance_;
PROTOBUF_CONSTEXPR SetPositionGlobalRequest::SetPositionGlobalRequest(
    ::_pbi::ConstantInitialized)
  : position_global_yaw_(nullptr){}
struct SetPositionGlobalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionGlobalRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionGlobalRequestDefaultTypeInternal() {}
  union {
    SetPositionGlobalRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionGlobalRequestDefaultTypeInternal _SetPositionGlobalRequest_default_instance_;
PROTOBUF_CONSTEXPR SetPositionGlobalResponse::SetPositionGlobalResponse(
    ::_pbi::ConstantInitialized)
  : offboard_result_(false){}
struct SetPositionGlobalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPositionGlobalResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPositionGlobalResponseDefaultTypeInternal() {}
  union {
    SetPositionGlobalResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPositionGlobalResponseDefaultTypeInternal _SetPositionGlobalResponse_default_instance_;
PROTOBUF_CONSTEXPR SetRateRequest::SetRateRequest(
    ::_pbi::ConstantInitialized){}
struct SetRateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateRequestDefaultTypeInternal() {}
  union {
    SetRateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateRequestDefaultTypeInternal _SetRateRequest_default_instance_;
PROTOBUF_CONSTEXPR SetRateResponse::SetRateResponse(
    ::_pbi::ConstantInitialized){}
struct SetRateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetRateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetRateResponseDefaultTypeInternal() {}
  union {
    SetRateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetRateResponseDefaultTypeInternal _SetRateResponse_default_instance_;
}  // namespace swarm_controller
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_swarm_5fcontroller_2fswarm_5fcontroller_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_swarm_5fcontroller_2fswarm_5fcontroller_2eproto = nullptr;

const uint32_t TableStruct_swarm_5fcontroller_2fswarm_5fcontroller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StartResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StartResponse, offboard_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::StopResponse, offboard_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::IsActiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::IsActiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::IsActiveResponse, is_active_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest, position_global_yaw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse, offboard_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetRateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::swarm_controller::SetRateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::StartRequest)},
  { 6, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::StartResponse)},
  { 13, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::StopRequest)},
  { 19, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::StopResponse)},
  { 26, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::IsActiveRequest)},
  { 32, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::IsActiveResponse)},
  { 39, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest)},
  { 46, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse)},
  { 53, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::SetRateRequest)},
  { 59, -1, -1, sizeof(::mavsdk::rpc::swarm_controller::SetRateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mavsdk::rpc::swarm_controller::_StartRequest_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_StartResponse_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_StopRequest_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_StopResponse_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_IsActiveRequest_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_IsActiveResponse_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_SetPositionGlobalRequest_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_SetPositionGlobalResponse_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_SetRateRequest_default_instance_._instance,
  &::mavsdk::rpc::swarm_controller::_SetRateResponse_default_instance_._instance,
};

const char descriptor_table_protodef_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'swarm_controller/swarm_controller.prot"
  "o\022\033mavsdk.rpc.swarm_controller\032\024mavsdk_o"
  "ptions.proto\032\023mavsdk_common.proto\"\016\n\014Sta"
  "rtRequest\"(\n\rStartResponse\022\027\n\017offboard_r"
  "esult\030\001 \001(\010\"\r\n\013StopRequest\"\'\n\014StopRespon"
  "se\022\027\n\017offboard_result\030\001 \001(\010\"\021\n\017IsActiveR"
  "equest\"%\n\020IsActiveResponse\022\021\n\tis_active\030"
  "\001 \001(\010\"Y\n\030SetPositionGlobalRequest\022=\n\023pos"
  "ition_global_yaw\030\001 \001(\0132 .mavsdk.common.P"
  "ositionGlobalYaw\"4\n\031SetPositionGlobalRes"
  "ponse\022\027\n\017offboard_result\030\001 \001(\010\"\020\n\016SetRat"
  "eRequest\"\021\n\017SetRateResponse2\307\004\n\026SwarmCon"
  "trollerService\022d\n\005Start\022).mavsdk.rpc.swa"
  "rm_controller.StartRequest\032*.mavsdk.rpc."
  "swarm_controller.StartResponse\"\004\200\265\030\001\022a\n\004"
  "Stop\022(.mavsdk.rpc.swarm_controller.StopR"
  "equest\032).mavsdk.rpc.swarm_controller.Sto"
  "pResponse\"\004\200\265\030\001\022m\n\010IsActive\022,.mavsdk.rpc"
  ".swarm_controller.IsActiveRequest\032-.mavs"
  "dk.rpc.swarm_controller.IsActiveResponse"
  "\"\004\200\265\030\001\022j\n\007SetRate\022+.mavsdk.rpc.swarm_con"
  "troller.SetRateRequest\032,.mavsdk.rpc.swar"
  "m_controller.SetRateResponse\"\004\200\265\030\001\022\210\001\n\021S"
  "etPositionGlobal\0225.mavsdk.rpc.swarm_cont"
  "roller.SetPositionGlobalRequest\0326.mavsdk"
  ".rpc.swarm_controller.SetPositionGlobalR"
  "esponse\"\004\200\265\030\001B\034\n\032io.mavsdk.swarm_control"
  "lerb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_deps[2] = {
  &::descriptor_table_mavsdk_5fcommon_2eproto,
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::_pbi::once_flag descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto = {
    false, false, 1091, descriptor_table_protodef_swarm_5fcontroller_2fswarm_5fcontroller_2eproto,
    "swarm_controller/swarm_controller.proto",
    &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once, descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_deps, 2, 10,
    schemas, file_default_instances, TableStruct_swarm_5fcontroller_2fswarm_5fcontroller_2eproto::offsets,
    file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto, file_level_enum_descriptors_swarm_5fcontroller_2fswarm_5fcontroller_2eproto,
    file_level_service_descriptors_swarm_5fcontroller_2fswarm_5fcontroller_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter() {
  return &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_swarm_5fcontroller_2fswarm_5fcontroller_2eproto(&descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto);
namespace mavsdk {
namespace rpc {
namespace swarm_controller {

// ===================================================================

class StartRequest::_Internal {
 public:
};

StartRequest::StartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.StartRequest)
}
StartRequest::StartRequest(const StartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.StartRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[0]);
}

// ===================================================================

class StartResponse::_Internal {
 public:
};

StartResponse::StartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.StartResponse)
}
StartResponse::StartResponse(const StartResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  offboard_result_ = from.offboard_result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.StartResponse)
}

inline void StartResponse::SharedCtor() {
offboard_result_ = false;
}

StartResponse::~StartResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.swarm_controller.StartResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StartResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StartResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.swarm_controller.StartResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offboard_result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool offboard_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offboard_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StartResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.swarm_controller.StartResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_offboard_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.swarm_controller.StartResponse)
  return target;
}

size_t StartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.swarm_controller.StartResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartResponse::GetClassData() const { return &_class_data_; }

void StartResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartResponse *>(to)->MergeFrom(
      static_cast<const StartResponse &>(from));
}


void StartResponse::MergeFrom(const StartResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.swarm_controller.StartResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offboard_result() != 0) {
    _internal_set_offboard_result(from._internal_offboard_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartResponse::CopyFrom(const StartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.swarm_controller.StartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartResponse::IsInitialized() const {
  return true;
}

void StartResponse::InternalSwap(StartResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offboard_result_, other->offboard_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[1]);
}

// ===================================================================

class StopRequest::_Internal {
 public:
};

StopRequest::StopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.StopRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[2]);
}

// ===================================================================

class StopResponse::_Internal {
 public:
};

StopResponse::StopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.StopResponse)
}
StopResponse::StopResponse(const StopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  offboard_result_ = from.offboard_result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.StopResponse)
}

inline void StopResponse::SharedCtor() {
offboard_result_ = false;
}

StopResponse::~StopResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.swarm_controller.StopResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.swarm_controller.StopResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offboard_result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool offboard_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offboard_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StopResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.swarm_controller.StopResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_offboard_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.swarm_controller.StopResponse)
  return target;
}

size_t StopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.swarm_controller.StopResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StopResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StopResponse::GetClassData() const { return &_class_data_; }

void StopResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StopResponse *>(to)->MergeFrom(
      static_cast<const StopResponse &>(from));
}


void StopResponse::MergeFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.swarm_controller.StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offboard_result() != 0) {
    _internal_set_offboard_result(from._internal_offboard_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StopResponse::CopyFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.swarm_controller.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopResponse::IsInitialized() const {
  return true;
}

void StopResponse::InternalSwap(StopResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offboard_result_, other->offboard_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[3]);
}

// ===================================================================

class IsActiveRequest::_Internal {
 public:
};

IsActiveRequest::IsActiveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.IsActiveRequest)
}
IsActiveRequest::IsActiveRequest(const IsActiveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.IsActiveRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsActiveRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsActiveRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata IsActiveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[4]);
}

// ===================================================================

class IsActiveResponse::_Internal {
 public:
};

IsActiveResponse::IsActiveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.IsActiveResponse)
}
IsActiveResponse::IsActiveResponse(const IsActiveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.IsActiveResponse)
}

inline void IsActiveResponse::SharedCtor() {
is_active_ = false;
}

IsActiveResponse::~IsActiveResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.swarm_controller.IsActiveResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsActiveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IsActiveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IsActiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.swarm_controller.IsActiveResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_active_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsActiveResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_active = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsActiveResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.swarm_controller.IsActiveResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_active(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.swarm_controller.IsActiveResponse)
  return target;
}

size_t IsActiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.swarm_controller.IsActiveResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_active = 1;
  if (this->_internal_is_active() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsActiveResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IsActiveResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsActiveResponse::GetClassData() const { return &_class_data_; }

void IsActiveResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IsActiveResponse *>(to)->MergeFrom(
      static_cast<const IsActiveResponse &>(from));
}


void IsActiveResponse::MergeFrom(const IsActiveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.swarm_controller.IsActiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_active() != 0) {
    _internal_set_is_active(from._internal_is_active());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsActiveResponse::CopyFrom(const IsActiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.swarm_controller.IsActiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsActiveResponse::IsInitialized() const {
  return true;
}

void IsActiveResponse::InternalSwap(IsActiveResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(is_active_, other->is_active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsActiveResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[5]);
}

// ===================================================================

class SetPositionGlobalRequest::_Internal {
 public:
  static const ::mavsdk::common::PositionGlobalYaw& position_global_yaw(const SetPositionGlobalRequest* msg);
};

const ::mavsdk::common::PositionGlobalYaw&
SetPositionGlobalRequest::_Internal::position_global_yaw(const SetPositionGlobalRequest* msg) {
  return *msg->position_global_yaw_;
}
void SetPositionGlobalRequest::clear_position_global_yaw() {
  if (GetArenaForAllocation() == nullptr && position_global_yaw_ != nullptr) {
    delete position_global_yaw_;
  }
  position_global_yaw_ = nullptr;
}
SetPositionGlobalRequest::SetPositionGlobalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
}
SetPositionGlobalRequest::SetPositionGlobalRequest(const SetPositionGlobalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position_global_yaw()) {
    position_global_yaw_ = new ::mavsdk::common::PositionGlobalYaw(*from.position_global_yaw_);
  } else {
    position_global_yaw_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
}

inline void SetPositionGlobalRequest::SharedCtor() {
position_global_yaw_ = nullptr;
}

SetPositionGlobalRequest::~SetPositionGlobalRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPositionGlobalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete position_global_yaw_;
}

void SetPositionGlobalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPositionGlobalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && position_global_yaw_ != nullptr) {
    delete position_global_yaw_;
  }
  position_global_yaw_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPositionGlobalRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mavsdk.common.PositionGlobalYaw position_global_yaw = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position_global_yaw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPositionGlobalRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.common.PositionGlobalYaw position_global_yaw = 1;
  if (this->_internal_has_position_global_yaw()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::position_global_yaw(this),
        _Internal::position_global_yaw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  return target;
}

size_t SetPositionGlobalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.common.PositionGlobalYaw position_global_yaw = 1;
  if (this->_internal_has_position_global_yaw()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_global_yaw_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPositionGlobalRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPositionGlobalRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPositionGlobalRequest::GetClassData() const { return &_class_data_; }

void SetPositionGlobalRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPositionGlobalRequest *>(to)->MergeFrom(
      static_cast<const SetPositionGlobalRequest &>(from));
}


void SetPositionGlobalRequest::MergeFrom(const SetPositionGlobalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_position_global_yaw()) {
    _internal_mutable_position_global_yaw()->::mavsdk::common::PositionGlobalYaw::MergeFrom(from._internal_position_global_yaw());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionGlobalRequest::CopyFrom(const SetPositionGlobalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.swarm_controller.SetPositionGlobalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPositionGlobalRequest::IsInitialized() const {
  return true;
}

void SetPositionGlobalRequest::InternalSwap(SetPositionGlobalRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(position_global_yaw_, other->position_global_yaw_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPositionGlobalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[6]);
}

// ===================================================================

class SetPositionGlobalResponse::_Internal {
 public:
};

SetPositionGlobalResponse::SetPositionGlobalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
}
SetPositionGlobalResponse::SetPositionGlobalResponse(const SetPositionGlobalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  offboard_result_ = from.offboard_result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
}

inline void SetPositionGlobalResponse::SharedCtor() {
offboard_result_ = false;
}

SetPositionGlobalResponse::~SetPositionGlobalResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetPositionGlobalResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetPositionGlobalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetPositionGlobalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offboard_result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetPositionGlobalResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool offboard_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          offboard_result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetPositionGlobalResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_offboard_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  return target;
}

size_t SetPositionGlobalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool offboard_result = 1;
  if (this->_internal_offboard_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetPositionGlobalResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetPositionGlobalResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetPositionGlobalResponse::GetClassData() const { return &_class_data_; }

void SetPositionGlobalResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetPositionGlobalResponse *>(to)->MergeFrom(
      static_cast<const SetPositionGlobalResponse &>(from));
}


void SetPositionGlobalResponse::MergeFrom(const SetPositionGlobalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offboard_result() != 0) {
    _internal_set_offboard_result(from._internal_offboard_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetPositionGlobalResponse::CopyFrom(const SetPositionGlobalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.swarm_controller.SetPositionGlobalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPositionGlobalResponse::IsInitialized() const {
  return true;
}

void SetPositionGlobalResponse::InternalSwap(SetPositionGlobalResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(offboard_result_, other->offboard_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetPositionGlobalResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[7]);
}

// ===================================================================

class SetRateRequest::_Internal {
 public:
};

SetRateRequest::SetRateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.SetRateRequest)
}
SetRateRequest::SetRateRequest(const SetRateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.SetRateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetRateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[8]);
}

// ===================================================================

class SetRateResponse::_Internal {
 public:
};

SetRateResponse::SetRateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.swarm_controller.SetRateResponse)
}
SetRateResponse::SetRateResponse(const SetRateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.swarm_controller.SetRateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetRateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetRateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SetRateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_getter, &descriptor_table_swarm_5fcontroller_2fswarm_5fcontroller_2eproto_once,
      file_level_metadata_swarm_5fcontroller_2fswarm_5fcontroller_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace swarm_controller
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::StartRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::StartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::StartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::StartResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::StartResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::StartResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::StopRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::StopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::StopResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::StopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::StopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::IsActiveRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::IsActiveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::IsActiveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::IsActiveResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::IsActiveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::IsActiveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::SetPositionGlobalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::SetPositionGlobalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::SetRateRequest*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::SetRateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::SetRateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::swarm_controller::SetRateResponse*
Arena::CreateMaybeMessage< ::mavsdk::rpc::swarm_controller::SetRateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::swarm_controller::SetRateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
